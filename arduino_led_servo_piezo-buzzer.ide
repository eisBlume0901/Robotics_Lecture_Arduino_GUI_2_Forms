
int redLED = 3;
int yellowLED = 5;
int greenLED = 6;

#include <Servo.h>
Servo servo;
int servoPin = 9;

int buzzPin = 10;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);

  pinMode(redLED, OUTPUT);
  pinMode(yellowLED, OUTPUT);
  pinMode(greenLED, OUTPUT);

  servo.attach(servoPin);
  
  pinMode(buzzPin, OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:


  if (Serial.available()  > 0) 
  {

    String data = Serial.readString();

    if (data.startsWith("Red Led")) {
      digitalWrite(redLED, HIGH);
    }
    if (data.startsWith("Red Led Off")) {
      digitalWrite(redLED, LOW);
    }

    if (data.startsWith("Yellow Led")) {
      digitalWrite(yellowLED, HIGH);
    }
    if (data.startsWith("Yellow Led Off")) {
      digitalWrite(yellowLED, LOW);
    }

    if (data.startsWith("Green Led")) {
    digitalWrite(greenLED, HIGH);
    }
    if (data.startsWith("Green Led Off")) {
      digitalWrite(greenLED, LOW);
    }

    if (data.startsWith("Red Intensity")) {
      data.replace("Red Intensity", "");
      int brightness = data.toInt();
      analogWrite(redLED, brightness);
    }

    if (data.startsWith("Yellow Intensity")) {
      data.replace("Yellow Intensity", "");
      int brightness = data.toInt();
      analogWrite(yellowLED, brightness);
    }

    if (data.startsWith("Green Intensity")) {
      data.replace("Green Intensity", "");
      int brightness = data.toInt();
      analogWrite(greenLED, brightness);
    }

    if (data.startsWith("Servo")) {
      data.replace("Servo", "");
      int angle = data.toInt();
      servo.write(angle);
    }

    if (data.startsWith("Blink LEDs")) {
      blinkLEDs(); 
    }

    if (data.startsWith("Beep Buzzer")) {
      beepBuzzer();
    }
  }
}

void controlLEDs(int redStatus, int yellowStatus, int greenStatus) {
  digitalWrite(redLED, redStatus);
  digitalWrite(yellowLED, yellowStatus);
  digitalWrite(greenLED, greenStatus);
}

void blinkLEDs() {
  int time1 = 250;
  
  int loop1 = 2;

  while (loop1 > 0) {
    controlLEDs(1, 0, 0);
    delay(time1);
    controlLEDs(0, 0, 0);
    delay(time1);
    loop1--;
  }

  int loop2 = 2;

  while (loop2 > 0) {
    controlLEDs(0, 1, 0);
    delay(time1);
    controlLEDs(0, 0, 0);
    delay(time1);
    loop2--;
  }
  
  int loop3 = 2;
  while (loop3 > 0) {
    controlLEDs(0, 0, 1);
    delay(time1);
    controlLEDs(0, 0, 0);
    delay(time1);
    loop3--;
  }

  int loop4 = 2;

  while (loop4 > 0) {
    controlLEDs(0, 0, 1);
    delay(time1);
    controlLEDs(0, 1, 0);
    delay(time1);
    controlLEDs(1, 0, 0);
    delay(time1);
    controlLEDs(0, 1, 0);
    delay(time1);
    controlLEDs(0, 0, 1);
    loop4--;
  }

  int loop5 = 4;
  while (loop5 > 0) {
    controlLEDs(1, 1, 1);
    delay(time1);
    controlLEDs(0, 0, 0);
    delay(time1);
    loop5--;
  }
}

void beepBuzzer() {
  int duration = 100;
  int frequency = 500;
  int interval = 250;

  int loop1 = 3;
  while (loop1 > 0) {
    tone(buzzPin, frequency, duration);
    delayMicroseconds(interval);
    tone(buzzPin, frequency, duration);
    delayMicroseconds(interval);
    loop1--;
  }

}